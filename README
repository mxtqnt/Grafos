# Algoritmo de Kruskal e sua aplica√ß√£o em Redes de computadores

  Neste trabalho estaremos realizando a implementa√ß√£o do algoritmo de Kruskal e o seu devido estudo aplicado √† uma rede de computadores de acordo com o paper [Application of Graph Theory to Computer Networks Using the Kruskal Algorithm](https://www.researchgate.net/profile/Putri-Indah-Pramesti/publication/381519447_Application_of_Graph_Theory_to_Computer_Networks_Using_the_Kruskal_Algorithm/data/66726682a54c5f0b946e2804/Application-of-Graph-Theory-to-Computer-Networks-Using-the-Kruskal-Algorithm.pdf)

## Participantes
- Adriel
- Ana
- Pedro
- Luan

## √çndice

  - [Roteiro do Trabalho](#roteiro-do-trabalho)
    - [Gerar Grafos](#gerar-grafos)
    - [Matriz Adjac√™ncia](#matriz-adjacencia)
    - [Matriz Custo](#matriz-custo)
    - [Algoritmo de Kruskal](#algoritmo-de-kruskal)
    - [Complexidade do Grafo](#complexidade-do-grafo)
    - [Desenho dos Grafos](#desenho-dos-grafos)
    - [Krukal em Redes de Computadores](#kruskal-em-redes-de-computadores)
  - [Implementa√ß√£o](#implementacao)
    - [Google Colab](#google-colab)
    - [Bibliotecas usadas](#bibliotecas-usadas)
  

## Roteiro do Trabalho

### Gerar Grafos

  Gerar grafos simples e conexos com n=10, 50 e 100
    - Grafo simples: um grafo que n√£o possui la√ßos (arestas que conectam um n√≥ a ele mesmo) nem m√∫ltiplas arestas entre os mesmos pares de n√≥s.
    - Grafo conexo: √© um grafo onde h√° pelo menos um caminho entre cada par de n√≥s.
    - n representa o n√∫mero de n√≥s (v√©rtices) no grafo.

### Matriz Adjac√™ncia

  - Gerar a Matriz Adjac√™ncia
  - A matriz de adjac√™ncia √© uma forma de representar um grafo onde cada linha e coluna da matriz representam um v√©rtice. Se houver uma aresta entre o v√©rtice i e o v√©rtice j, o valor na posi√ß√£o ùê¥[i][j] ser√° 1 (ou o peso da aresta, no caso de grafos ponderados), e 0 se n√£o houver aresta.
    
### Matriz Custo

  - Gerar uma matriz de custo
  - A Matriz de Custo √© semelhante √† matriz de adjac√™ncia, mas ao inv√©s de marcar apenas a exist√™ncia de arestas, voc√™ atribui um custo a cada aresta. Nesse caso, os custos devem ser n√∫meros inteiros no intervalo de 1 a 5

### Algoritmo de Kruskal

  Aqui, realizaremos a implementa√ß√£o do Algoritmo de Kruskal para encontrar √°rvores geradoras m√≠nimas

### Complexidade do Grafo
  Vamos analizar uma an√°lise te√≥ria usando a notagem Grande O para definir a complexidade de tempo e de entradas do Algoritmo de Kruskal
      
### Desenho dos Grafos
  Vamos estar utilizando pandas, networkx e matplotlib para a plotagem dos grafos

### Krukal em Redes de Computadores

Por fim, estudaremos a aplica√ß√£o do Kruskal em Redes de Computadores

## Implementa√ß√£o
      
### Google Colab
  Utilizamos notebooks no Google Colab como Plataforma de Desenvolvimento para desenvolver esse trabalho

### Bibliotecas Usadas
  Usamos as seguintes bibliotecas:
      - networkx para cria√ß√£o e manipula√ß√£o de grafos
      - matplotlib.pyplot para plotagem de grafos
      - random para gera√ß√£o de n√∫meros aleat√≥rios
      - pandas para cria√ß√£o e uso de Dataframes
      - numpy para realiza√ß√£o de opera√ß√µes matem√°ticas

